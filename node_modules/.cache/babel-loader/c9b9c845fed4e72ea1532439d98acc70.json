{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/EditUserForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button, Image } from 'react-bootstrap';\nimport firebase from 'firebase';\nconst initialFormState = {\n  isValid: false,\n  loading: true,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  errors: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  touched: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  }\n};\n\nconst EditUserForm = props => {\n  _s();\n\n  const routerMatch = useRouteMatch(\"/user/edit/:id\");\n  const id = routerMatch.params.id;\n  const [fileName, setFileName] = useState(\"Insira um arquivo vÃ¡lido\");\n  const database = firebase.database();\n  const [formState, setFormState] = useState(initialFormState);\n\n  const queryUserByID = () => {\n    firebase.database().ref('Users').child(`${id}`).once('value', snapshot => {\n      setFormState(formState => ({ ...formState,\n        loading: false,\n        values: snapshot.val()\n      }));\n    });\n  };\n\n  if (formState.loading) queryUserByID();\n  console.log(formState.values);\n\n  const handleAvatarImage = () => {\n    /*if()\n    bsCustomFileInput.init()\n     var btn = document.getElementById('btnResetForm')\n    var form = document.querySelector('form')\n    btn.addEventListener('click', function () {\n      form.reset()\n    })*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"bg-dark text-white\",\n        border: \"warning\",\n        as: \"h4\",\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicAvatar\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Avatar Personalizado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Image\n            /*src={handleAvatarImage}*/\n            , {\n              roundedCircle: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n              id: \"inputGroupFile01\",\n              label: fileName,\n              value: formState.values.avatar,\n              \"data-browse\": \"Insira uma imagem\",\n              onChange: e => setFileName(e.target.files[0].name),\n              custom: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Formatos v\\xE1lidos: PNG, JPEG, JPG.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicBio\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Descri\\xE7\\xE3o do seu perfil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Descri\\xE7\\xE3o\",\n              value: formState.values.bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Nome Sobrenome\",\n              value: formState.values.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Senha\",\n              value: formState.values.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPasswordConfirmation\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirmar Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Senha\",\n              value: formState.values.passwordConfirmation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditUserForm, \"GNA4sPGdZiz9X3IMOltIkfzpaT4=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = EditUserForm;\nexport default EditUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserForm\");","map":{"version":3,"sources":["/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/EditUserForm/index.js"],"names":["React","useState","useEffect","useRouteMatch","Container","Row","Card","Form","Button","Image","firebase","initialFormState","isValid","loading","values","name","email","password","passwordConfirmation","bio","avatar","errors","touched","EditUserForm","props","routerMatch","id","params","fileName","setFileName","database","formState","setFormState","queryUserByID","ref","child","once","snapshot","val","console","log","handleAvatarImage","e","target","files"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button, Image } from 'react-bootstrap';\nimport firebase from 'firebase';\n\nconst initialFormState = {\n  isValid: false,\n  loading: true,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  errors: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  touched: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  }\n}\n\nconst EditUserForm = (props) => {\n  const routerMatch = useRouteMatch(\"/user/edit/:id\");\n  const id = routerMatch.params.id;\n  const [fileName, setFileName] = useState(\"Insira um arquivo vÃ¡lido\");\n  const database = firebase.database();\n\n  const [formState, setFormState] = useState(initialFormState);\n\n  const queryUserByID = () => {\n    firebase.database().ref('Users').child(`${id}`).once('value', (snapshot) => {\n      setFormState(formState => ({\n        ...formState,\n        loading: false,\n        values: snapshot.val()\n      }))\n    });\n  }\n  \n  if(formState.loading) queryUserByID();\n  \n  console.log(formState.values);\n\n  const handleAvatarImage = () => {\n    /*if()\n    bsCustomFileInput.init()\n\n    var btn = document.getElementById('btnResetForm')\n    var form = document.querySelector('form')\n    btn.addEventListener('click', function () {\n      form.reset()\n    })*/\n  }\n\n  return (\n    <Container>\n      \n      <Card>\n        <Card.Header  className=\"bg-dark text-white\" border=\"warning\" as=\"h4\">Editar</Card.Header>\n        <Card.Body>\n          <Form>\n\n            <Form.Group controlId=\"formBasicAvatar\">\n              <Form.Label>Avatar Personalizado</Form.Label>\n              \n              <Image /*src={handleAvatarImage}*/ roundedCircle />\n\n              <Form.File \n                id=\"inputGroupFile01\"\n                label={fileName}\n                value={formState.values.avatar}\n                data-browse=\"Insira uma imagem\"\n                onChange={(e) => setFileName(e.target.files[0].name)}\n                custom                \n              />\n              \n              <Form.Text className=\"text-muted\">\n                Formatos vÃ¡lidos: PNG, JPEG, JPG.\n              </Form.Text>\n            </Form.Group>   \n\n            <Form.Group controlId=\"formBasicBio\">\n              <Form.Label>DescriÃ§Ã£o do seu perfil</Form.Label>\n              <Form.Control \n                type=\"text\" \n                placeholder=\"DescriÃ§Ã£o\" \n                value={formState.values.bio}\n              />\n            </Form.Group>\n            \n            <Form.Group controlId=\"formBasicName\">\n              <Form.Label>Nome</Form.Label>\n              <Form.Control \n                type=\"text\" \n                placeholder=\"Nome Sobrenome\"             \n                value={formState.values.name}\n             />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Senha</Form.Label>\n              <Form.Control \n                type=\"password\" \n                placeholder=\"Senha\" \n                value={formState.values.password}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPasswordConfirmation\">\n              <Form.Label>Confirmar Senha</Form.Label>\n              <Form.Control \n                type=\"password\" \n                placeholder=\"Senha\" \n                value={formState.values.passwordConfirmation}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Atualizar\n            </Button>\n\n          </Form>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default EditUserForm;\n"]},"metadata":{},"sourceType":"module"}