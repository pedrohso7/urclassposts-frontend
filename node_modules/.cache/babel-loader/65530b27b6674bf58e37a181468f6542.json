{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/EditUserForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button, Image } from 'react-bootstrap';\nimport firebase from 'firebase';\nconst initialFormState = {\n  isValid: false,\n  loading: true,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  errors: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  touched: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  }\n};\n\nconst EditUserForm = () => {\n  _s();\n\n  const routerMatch = useRouteMatch(\"/user/edit/:id\");\n  const id = routerMatch.params.id;\n  const database = firebase.database();\n  const [fileName, setFileName] = useState(\"Insira um arquivo válido\");\n  const [formState, setFormState] = useState(initialFormState);\n\n  const queryUserByID = () => {\n    if (formState.loading) return firebase.database().ref('Users').child(`${id}`).once('value', snapshot => {\n      setFormState(formState => ({ ...formState,\n        loading: false,\n        values: { ...formState.values,\n          name: snapshot.val().name,\n          bio: snapshot.val().bio ? snapshot.val().bio : '',\n          password: snapshot.val().password,\n          avatar: snapshot.val().avatar ? snapshot.val().avatar : ''\n        },\n        touched: { ...formState.touched,\n          name: true,\n          password: true,\n          bio: snapshot.val().bio ? true : false,\n          avatar: snapshot.val().avatar ? true : false\n        }\n      }));\n    });\n  };\n\n  useEffect(() => {\n    //Buscando usuário\n    queryUserByID();\n  });\n\n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({ ...formState,\n      values: { ...formState.values,\n        [field]: value\n      }\n    });\n    setFormState({ ...formState,\n      touched: { ...formState.touched,\n        [field]: true\n      }\n    });\n    console.log(formState.values);\n    console.log(formState.touched);\n  };\n\n  const handleAvatarChange = e => {\n    setFileName(e.target.files[0].name);\n    handleFieldChange(e, 'avatar', e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"bg-dark text-white\",\n        border: \"warning\",\n        as: \"h4\",\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicAvatar\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Avatar Personalizado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Image\n            /*src={handleAvatarImage}*/\n            , {\n              roundedCircle: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n              id: \"inputGroupFile01\",\n              label: fileName,\n              value: formState.values.avatar,\n              \"data-browse\": \"Insira uma imagem\" //onChange={(e) => handleAvatarChange(e)}\n              ,\n              custom: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Formatos v\\xE1lidos: PNG, JPEG, JPG.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicBio\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Descri\\xE7\\xE3o do seu perfil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Descri\\xE7\\xE3o\",\n              value: formState.values.bio //onChange={e => handleFieldChange(e, 'bio', e.target.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Nome Sobrenome\",\n              value: formState.values.name //onChange={e => handleFieldChange(e, 'bio', e.target.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Senha\",\n              value: formState.values.password //onChange={e => handleFieldChange(e, 'bio', e.target.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPasswordConfirmation\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirmar Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Senha\",\n              value: formState.values.passwordConfirmation //onChange={e => handleFieldChange(e, 'bio', e.target.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditUserForm, \"TVPMB2TVpqO7Sa6UCND/X3qroDE=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = EditUserForm;\nexport default EditUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserForm\");","map":{"version":3,"sources":["/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/EditUserForm/index.js"],"names":["React","useState","useEffect","useRouteMatch","Container","Row","Card","Form","Button","Image","firebase","initialFormState","isValid","loading","values","name","email","password","passwordConfirmation","bio","avatar","errors","touched","EditUserForm","routerMatch","id","params","database","fileName","setFileName","formState","setFormState","queryUserByID","ref","child","once","snapshot","val","handleFieldChange","e","field","value","persist","console","log","handleAvatarChange","target","files"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button, Image } from 'react-bootstrap';\nimport firebase from 'firebase';\n\nconst initialFormState = {\n  isValid: false,\n  loading: true,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  errors: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  touched: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  }\n}\n\nconst EditUserForm = () => {\n  const routerMatch = useRouteMatch(\"/user/edit/:id\");\n  const id = routerMatch.params.id;\n  const database = firebase.database();\n  const [fileName, setFileName] = useState(\"Insira um arquivo válido\");\n  const [formState, setFormState] = useState(initialFormState);\n\n  const queryUserByID = () => {\n    if(formState.loading) return (\n\n      firebase.database().ref('Users').child(`${id}`).once('value', (snapshot) => {\n        setFormState(formState => ({\n          ...formState,\n          loading: false,\n          values: {\n            ...formState.values,\n            name: snapshot.val().name,\n            bio: snapshot.val().bio ? snapshot.val().bio : '',\n            password: snapshot.val().password,\n            avatar: snapshot.val().avatar ? snapshot.val().avatar : '' \n          },\n          touched: {          \n            ...formState.touched,\n            name: true,\n            password: true,\n            bio: snapshot.val().bio ? true : false,\n            avatar: snapshot.val().avatar ? true : false          \n          }\n        }))\n      })\n    ) \n  }\n\n  useEffect(() => {\n    //Buscando usuário\n    queryUserByID();\n  });  \n  \n  const handleFieldChange = (e, field, value) => {\n    \n    \n    e.persist && e.persist();\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [field]: value\n      }\n    });\n\n    setFormState({\n      ...formState,\n      touched: {\n        ...formState.touched,\n        [field]: true\n      }\n    });\n    console.log(formState.values);\n    console.log(formState.touched);\n  };\n\n  const handleAvatarChange = (e) => {\n    setFileName(e.target.files[0].name);\n    handleFieldChange(e, 'avatar', e.target.value);\n  }\n\n  return (\n    <Container>\n      \n      <Card>\n        <Card.Header  className=\"bg-dark text-white\" border=\"warning\" as=\"h4\">Editar</Card.Header>\n        <Card.Body>\n          <Form>\n\n            <Form.Group controlId=\"formBasicAvatar\">\n              <Form.Label>Avatar Personalizado</Form.Label>\n              \n              <Image /*src={handleAvatarImage}*/ roundedCircle />\n\n              <Form.File \n                id=\"inputGroupFile01\"\n                label={fileName}\n                value={formState.values.avatar}\n                data-browse=\"Insira uma imagem\"\n                //onChange={(e) => handleAvatarChange(e)}\n                custom                \n              />\n              \n              <Form.Text className=\"text-muted\">\n                Formatos válidos: PNG, JPEG, JPG.\n              </Form.Text>\n            </Form.Group>   \n\n            <Form.Group controlId=\"formBasicBio\">\n              <Form.Label>Descrição do seu perfil</Form.Label>\n              <Form.Control \n                type=\"text\" \n                placeholder=\"Descrição\" \n                value={formState.values.bio}\n                //onChange={e => handleFieldChange(e, 'bio', e.target.value)}\n              />\n            </Form.Group>\n            \n            <Form.Group controlId=\"formBasicName\">\n              <Form.Label>Nome</Form.Label>\n              <Form.Control \n                type=\"text\" \n                placeholder=\"Nome Sobrenome\"             \n                value={formState.values.name}\n                //onChange={e => handleFieldChange(e, 'bio', e.target.value)}\n             />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Senha</Form.Label>\n              <Form.Control \n                type=\"password\" \n                placeholder=\"Senha\" \n                value={formState.values.password}\n                //onChange={e => handleFieldChange(e, 'bio', e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPasswordConfirmation\">\n              <Form.Label>Confirmar Senha</Form.Label>\n              <Form.Control \n                type=\"password\" \n                placeholder=\"Senha\" \n                value={formState.values.passwordConfirmation}\n                //onChange={e => handleFieldChange(e, 'bio', e.target.value)}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Atualizar\n            </Button>\n\n          </Form>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default EditUserForm;\n"]},"metadata":{},"sourceType":"module"}