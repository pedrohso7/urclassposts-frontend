{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts-frontend/src/views/CreateUserForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button, Spinner, Alert } from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from '../../firebaseConnection'; //Variáveis do formulário\n\nconst initialFormState = {\n  isValid: false,\n  loading: false,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: ''\n  },\n  errors: {\n    name: [],\n    email: [],\n    password: [],\n    passwordConfirmation: []\n  },\n  touched: {\n    name: false,\n    email: false,\n    password: false,\n    passwordConfirmation: false\n  }\n}; //Estado inicial do feedback do usuário\n\nconst initialFeedback = {\n  open: false,\n  message: '',\n  type: ''\n}; //Esquema para validações no validate.js\n\nconst schema = {\n  name: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    length: {\n      maximum: 150,\n      message: () => 'Este campo deve ter no máximo 150 caracteres'\n    }\n  },\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    email: {\n      message: () => 'Insira um email válido'\n    }\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    length: {\n      minimum: 8,\n      message: () => 'Este campo deve ter no mínimo 8 caracteres'\n    }\n  },\n  passwordConfirmation: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    length: {\n      minimum: 8,\n      message: () => 'Este campo deve ter no mínimo 8 caracteres'\n    },\n    equality: {\n      attribute: 'password',\n      message: 'As senhas não são iguais!',\n      comparator: (v1, v2) => v1 === v2\n    }\n  }\n};\n\nconst CreateUserForm = () => {\n  _s();\n\n  //Garantindo que a página apenas seja por alguém deslogado do sistema\n  firebase.auth().signOut(); //Observador\n\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      firebase.database().ref('User').child(user.uid).set({\n        name: formState.values.name\n      });\n    }\n  });\n  const [feedback, setFeedback] = useState(initialFeedback);\n  const [formState, setFormState] = useState(initialFormState);\n  useEffect(() => {\n    //Verificando campos do formulário a cada atualização do formulário\n    const errors = validate(formState.values, schema, {\n      fullMessages: false\n    });\n    setFormState(formState => ({ ...formState,\n      isValid: errors ? false : true,\n      errors: errors ? errors : {}\n    }));\n  }, [formState.values]);\n\n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({ ...formState,\n      values: { ...formState.values,\n        [field]: value\n      },\n      touched: { ...formState.touched,\n        [field]: true\n      }\n    });\n  };\n\n  const handleRedirect = () => {\n    if (formState.isValid) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 14\n      }, this);\n    }\n\n    setFeedback({ ...feedback,\n      open: false\n    });\n  };\n\n  const hasError = field => Boolean(formState.errors[field] && formState.touched[field]);\n\n  const handleSubmit = e => {\n    if (formState.isValid) {\n      //Submetendo dados ao banco\n      firebase.auth().createUserWithEmailAndPassword(formState.values.email, formState.values.password).catch(error => {\n        if (error.code === 'auth/email-already-in-use') {\n          setFeedback({\n            open: true,\n            type: 'danger',\n            message: \"Email em uso!\"\n          });\n        } else if (error.code === 'auth/invalid-email') {\n          setFeedback({\n            open: true,\n            type: 'danger',\n            message: \"Email inválido!\"\n          });\n        } else {\n          setFeedback({\n            open: true,\n            type: 'danger',\n            message: 'Erro: ' + error.code\n          });\n        }\n\n        e.preventDefault();\n      });\n      /*let users = firebase.database().ref('Users');\n      let key = users.push().key;\n      users.child(key).set({\n        name: formState.values.name,\n        email: formState.values.email,\n        senha: formState.values.password\n      });*/\n\n      setFeedback({\n        open: true,\n        type: 'success',\n        message: \"Cadastrado com sucesso!\"\n      });\n    } else {\n      setFeedback({\n        open: true,\n        type: 'danger',\n        message: \"Não foi possível concluir o cadastro.\"\n      });\n    }\n\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      padding: 10\n    },\n    children: formState.loading ? /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginTop: 250\n      },\n      className: \"justify-content-center\",\n      float: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"warning\",\n        size: \"xs\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"bg-dark text-white\",\n        border: \"warning\",\n        as: \"h4\",\n        children: \"Criar usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          as: \"h4\",\n          children: \"Criar conta no sistema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              isInvalid: hasError('name') ? true : false,\n              type: \"text\",\n              placeholder: \"Nome Sobrenome\",\n              value: formState.values.name,\n              onChange: e => handleFieldChange(e, 'name', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-danger\",\n              children: hasError('name') ? formState.errors.name[0] : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              isInvalid: hasError('email') ? true : false,\n              type: \"email\",\n              placeholder: \"texto@exemplo.com\",\n              value: formState.values.email,\n              onChange: e => handleFieldChange(e, 'email', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-danger\",\n              children: hasError('email') ? formState.errors.email[0] : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              isInvalid: hasError('password') ? true : false,\n              type: \"password\",\n              placeholder: \"Senha\",\n              value: formState.values.password,\n              onChange: e => handleFieldChange(e, 'password', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-danger\",\n              children: hasError('password') ? formState.errors.password[0] : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPasswordConfirmation\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirme a Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              isInvalid: hasError('passwordConfirmation') ? true : false,\n              type: \"password\",\n              placeholder: \"Confirme sua senha\",\n              value: formState.values.passwordConfirmation,\n              onChange: e => handleFieldChange(e, 'passwordConfirmation', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-danger\",\n              children: hasError('passwordConfirmation') ? formState.errors.passwordConfirmation[0] : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), feedback.open ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: feedback.type,\n            onClose: () => handleRedirect(),\n            dismissible: true,\n            children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n              children: feedback.type === 'success' ? 'Sucesso!' : 'Erro!'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: feedback.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: e => handleSubmit(e),\n            variant: \"primary\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateUserForm, \"+Qjs1R3g/8px5C7VNKBXRkSChP4=\");\n\n_c = CreateUserForm;\nexport default CreateUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUserForm\");","map":{"version":3,"sources":["/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts-frontend/src/views/CreateUserForm/index.js"],"names":["React","useState","useEffect","Redirect","Container","Row","Card","Form","Button","Spinner","Alert","validate","firebase","initialFormState","isValid","loading","values","name","email","password","passwordConfirmation","errors","touched","initialFeedback","open","message","type","schema","presence","allowEmpty","length","maximum","minimum","equality","attribute","comparator","v1","v2","CreateUserForm","auth","signOut","onAuthStateChanged","user","database","ref","child","uid","set","formState","feedback","setFeedback","setFormState","fullMessages","handleFieldChange","e","field","value","persist","handleRedirect","hasError","Boolean","handleSubmit","createUserWithEmailAndPassword","catch","error","code","preventDefault","padding","marginTop","target"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAwB,kBAAxB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,MAArC,EAA8CC,OAA9C,EAAuDC,KAAvD,QAAmE,iBAAnE;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB,C,CAGA;;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,EAAE,KADc;AAEvBC,EAAAA,OAAO,EAAE,KAFc;AAGvBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE,EADA;AAENC,IAAAA,KAAK,EAAE,EAFD;AAGNC,IAAAA,QAAQ,EAAE,EAHJ;AAINC,IAAAA,oBAAoB,EAAE;AAJhB,GAHe;AASvBC,EAAAA,MAAM,EAAE;AACNJ,IAAAA,IAAI,EAAE,EADA;AAENC,IAAAA,KAAK,EAAE,EAFD;AAGNC,IAAAA,QAAQ,EAAE,EAHJ;AAINC,IAAAA,oBAAoB,EAAE;AAJhB,GATe;AAevBE,EAAAA,OAAO,EAAE;AACPL,IAAAA,IAAI,EAAE,KADC;AAEPC,IAAAA,KAAK,EAAE,KAFA;AAGPC,IAAAA,QAAQ,EAAE,KAHH;AAIPC,IAAAA,oBAAoB,EAAE;AAJf;AAfc,CAAzB,C,CAuBA;;AACA,MAAMG,eAAe,GAAG;AACtBC,EAAAA,IAAI,EAAE,KADgB;AAEtBC,EAAAA,OAAO,EAAE,EAFa;AAGtBC,EAAAA,IAAI,EAAE;AAHgB,CAAxB,C,CAMA;;AACA,MAAMC,MAAM,GAAG;AACbV,EAAAA,IAAI,EAAE;AACJW,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBJ,MAAAA,OAAO,EAAE,MAAM;AAApC,KADN;AAEJK,IAAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE,GAAX;AAAgBN,MAAAA,OAAO,EAAE,MAAM;AAA/B;AAFJ,GADO;AAKbP,EAAAA,KAAK,EAAE;AACLU,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBJ,MAAAA,OAAO,EAAE,MAAM;AAApC,KADL;AAELP,IAAAA,KAAK,EAAE;AAAEO,MAAAA,OAAO,EAAE,MAAM;AAAjB;AAFF,GALM;AASbN,EAAAA,QAAQ,EAAE;AACRS,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBJ,MAAAA,OAAO,EAAE,MAAM;AAApC,KADF;AAERK,IAAAA,MAAM,EAAE;AAAEE,MAAAA,OAAO,EAAE,CAAX;AAAcP,MAAAA,OAAO,EAAE,MAAM;AAA7B;AAFA,GATG;AAabL,EAAAA,oBAAoB,EAAE;AACpBQ,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBJ,MAAAA,OAAO,EAAE,MAAM;AAApC,KADU;AAEpBK,IAAAA,MAAM,EAAE;AAAEE,MAAAA,OAAO,EAAE,CAAX;AAAcP,MAAAA,OAAO,EAAE,MAAM;AAA7B,KAFY;AAGpBQ,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,SAAS,EAAE,UAAb;AAAyBT,MAAAA,OAAO,EAAE,2BAAlC;AAA+DU,MAAAA,UAAU,EAAE,CAACC,EAAD,EAAKC,EAAL,KAAaD,EAAE,KAAKC;AAA/F;AAHU;AAbT,CAAf;;AAsBA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B;AACA1B,EAAAA,QAAQ,CAAC2B,IAAT,GAAgBC,OAAhB,GAF2B,CAI3B;;AACA5B,EAAAA,QAAQ,CAAC2B,IAAT,GAAgBE,kBAAhB,CAAoCC,IAAD,IAAU;AAC3C,QAAGA,IAAH,EAAQ;AACN9B,MAAAA,QAAQ,CAAC+B,QAAT,GAAoBC,GAApB,CAAwB,MAAxB,EAAgCC,KAAhC,CAAsCH,IAAI,CAACI,GAA3C,EAAgDC,GAAhD,CAAoD;AAClD9B,QAAAA,IAAI,EAAE+B,SAAS,CAAChC,MAAV,CAAiBC;AAD2B,OAApD;AAGD;AACF,GAND;AAQA,QAAM,CAACgC,QAAD,EAAWC,WAAX,IAA0BjD,QAAQ,CAACsB,eAAD,CAAxC;AACA,QAAM,CAACyB,SAAD,EAAYG,YAAZ,IAA4BlD,QAAQ,CAACY,gBAAD,CAA1C;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMmB,MAAM,GAAGV,QAAQ,CAACqC,SAAS,CAAChC,MAAX,EAAmBW,MAAnB,EAA2B;AAAEyB,MAAAA,YAAY,EAAE;AAAhB,KAA3B,CAAvB;AAEAD,IAAAA,YAAY,CAACH,SAAS,KAAK,EACzB,GAAGA,SADsB;AAEzBlC,MAAAA,OAAO,EAAEO,MAAM,GAAG,KAAH,GAAU,IAFA;AAGzBA,MAAAA,MAAM,EAAEA,MAAM,GAAGA,MAAH,GAAY;AAHD,KAAL,CAAV,CAAZ;AAMD,GAVQ,EAUN,CAAC2B,SAAS,CAAChC,MAAX,CAVM,CAAT;;AAYA,QAAMqC,iBAAiB,GAAG,CAACC,CAAD,EAAIC,KAAJ,EAAWC,KAAX,KAAqB;AAC7CF,IAAAA,CAAC,CAACG,OAAF,IAAaH,CAAC,CAACG,OAAF,EAAb;AACAN,IAAAA,YAAY,CAAC,EACX,GAAGH,SADQ;AAEXhC,MAAAA,MAAM,EAAE,EACN,GAAGgC,SAAS,CAAChC,MADP;AAEN,SAACuC,KAAD,GAASC;AAFH,OAFG;AAMXlC,MAAAA,OAAO,EAAE,EACP,GAAG0B,SAAS,CAAC1B,OADN;AAEP,SAACiC,KAAD,GAAS;AAFF;AANE,KAAD,CAAZ;AAWD,GAbD;;AAeA,QAAMG,cAAc,GAAG,MAAM;AAC3B,QAAGV,SAAS,CAAClC,OAAb,EAAqB;AACnB,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACDoC,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAczB,MAAAA,IAAI,EAAE;AAApB,KAAD,CAAX;AACD,GALD;;AAOA,QAAMmC,QAAQ,GAAIJ,KAAD,IAAWK,OAAO,CAACZ,SAAS,CAAC3B,MAAV,CAAiBkC,KAAjB,KAA2BP,SAAS,CAAC1B,OAAV,CAAkBiC,KAAlB,CAA5B,CAAnC;;AAEA,QAAMM,YAAY,GAAIP,CAAD,IAAO;AAC1B,QAAGN,SAAS,CAAClC,OAAb,EAAqB;AACnB;AACAF,MAAAA,QAAQ,CAAC2B,IAAT,GAAgBuB,8BAAhB,CAA+Cd,SAAS,CAAChC,MAAV,CAAiBE,KAAhE,EAAuE8B,SAAS,CAAChC,MAAV,CAAiBG,QAAxF,EACC4C,KADD,CACQC,KAAD,IAAU;AACf,YAAGA,KAAK,CAACC,IAAN,KAAe,2BAAlB,EAA8C;AAC5Cf,UAAAA,WAAW,CAAC;AACV1B,YAAAA,IAAI,EAAE,IADI;AAEVE,YAAAA,IAAI,EAAE,QAFI;AAGVD,YAAAA,OAAO,EAAE;AAHC,WAAD,CAAX;AAKD,SAND,MAMM,IAAGuC,KAAK,CAACC,IAAN,KAAe,oBAAlB,EAAuC;AAC3Cf,UAAAA,WAAW,CAAC;AACV1B,YAAAA,IAAI,EAAE,IADI;AAEVE,YAAAA,IAAI,EAAE,QAFI;AAGVD,YAAAA,OAAO,EAAE;AAHC,WAAD,CAAX;AAKD,SANK,MAMD;AACHyB,UAAAA,WAAW,CAAC;AACV1B,YAAAA,IAAI,EAAE,IADI;AAEVE,YAAAA,IAAI,EAAE,QAFI;AAGVD,YAAAA,OAAO,EAAE,WAAWuC,KAAK,CAACC;AAHhB,WAAD,CAAX;AAKD;;AACDX,QAAAA,CAAC,CAACY,cAAF;AACD,OAtBD;AAwBA;AACN;AACA;AACA;AACA;AACA;AACA;;AAEMhB,MAAAA,WAAW,CAAC;AACV1B,QAAAA,IAAI,EAAE,IADI;AAEVE,QAAAA,IAAI,EAAE,SAFI;AAGVD,QAAAA,OAAO,EAAE;AAHC,OAAD,CAAX;AAKD,KAvCD,MAuCK;AACHyB,MAAAA,WAAW,CAAC;AACV1B,QAAAA,IAAI,EAAE,IADI;AAEVE,QAAAA,IAAI,EAAE,QAFI;AAGVD,QAAAA,OAAO,EAAE;AAHC,OAAD,CAAX;AAKD;;AACD6B,IAAAA,CAAC,CAACY,cAAF;AACD,GAhDD;;AAkDA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAlB;AAAA,cAEInB,SAAS,CAACjC,OAAV,gBACC,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAACqD,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAA6B,MAAA,SAAS,EAAC,wBAAvC;AAAgE,MAAA,KAAK,EAAC,QAAtE;AAAA,6BACK,QAAC,OAAD;AAAU,QAAA,SAAS,EAAC,QAApB;AAA6B,QAAA,OAAO,EAAC,SAArC;AAA+C,QAAA,IAAI,EAAC,IAApD;AAAyD,QAAA,IAAI,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YADD,gBAIC,QAAC,IAAD;AAAA,8BACC,QAAC,IAAD,CAAM,MAAN;AAAc,QAAA,SAAS,EAAC,oBAAxB;AAA6C,QAAA,MAAM,EAAC,SAApD;AAA8D,QAAA,EAAE,EAAC,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAGC,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD;AAAM,UAAA,UAAU,MAAhB;AAAA,kCAEE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,eAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,SAAS,EAAET,QAAQ,CAAC,MAAD,CAAR,GAAmB,IAAnB,GAA0B,KADvC;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,WAAW,EAAC,gBAHd;AAIE,cAAA,KAAK,EAAEX,SAAS,CAAChC,MAAV,CAAiBC,IAJ1B;AAKE,cAAA,QAAQ,EAAEqC,CAAC,IAAID,iBAAiB,CAACC,CAAD,EAAI,MAAJ,EAAYA,CAAC,CAACe,MAAF,CAASb,KAArB;AALlC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAUE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,aAArB;AAAA,wBACGG,QAAQ,CAAC,MAAD,CAAR,GAAmBX,SAAS,CAAC3B,MAAV,CAAiBJ,IAAjB,CAAsB,CAAtB,CAAnB,GAA8C;AADjD;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAkBE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,mBAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,SAAS,EAAE0C,QAAQ,CAAC,OAAD,CAAR,GAAoB,IAApB,GAA2B,KADxC;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,WAAW,EAAC,mBAHd;AAIE,cAAA,KAAK,EAAEX,SAAS,CAAChC,MAAV,CAAiBE,KAJ1B;AAKE,cAAA,QAAQ,EAAEoC,CAAC,IAAID,iBAAiB,CAACC,CAAD,EAAI,OAAJ,EAAaA,CAAC,CAACe,MAAF,CAASb,KAAtB;AALlC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAUE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,aAArB;AAAA,wBACGG,QAAQ,CAAC,OAAD,CAAR,GAAoBX,SAAS,CAAC3B,MAAV,CAAiBH,KAAjB,CAAuB,CAAvB,CAApB,GAAgD;AADnD;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAmCE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,mBAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,SAAS,EAAEyC,QAAQ,CAAC,UAAD,CAAR,GAAuB,IAAvB,GAA8B,KAD3C;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,WAAW,EAAC,OAHd;AAIE,cAAA,KAAK,EAAEX,SAAS,CAAChC,MAAV,CAAiBG,QAJ1B;AAKE,cAAA,QAAQ,EAAEmC,CAAC,IAAID,iBAAiB,CAACC,CAAD,EAAI,UAAJ,EAAgBA,CAAC,CAACe,MAAF,CAASb,KAAzB;AALlC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAUE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,aAArB;AAAA,wBACGG,QAAQ,CAAC,UAAD,CAAR,GAAuBX,SAAS,CAAC3B,MAAV,CAAiBF,QAAjB,CAA0B,CAA1B,CAAvB,GAAsD;AADzD;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnCF,eAoDE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,+BAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,SAAS,EAAEwC,QAAQ,CAAC,sBAAD,CAAR,GAAmC,IAAnC,GAA0C,KADvD;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,WAAW,EAAC,oBAHd;AAIE,cAAA,KAAK,EAAEX,SAAS,CAAChC,MAAV,CAAiBI,oBAJ1B;AAKE,cAAA,QAAQ,EAAEkC,CAAC,IAAID,iBAAiB,CAACC,CAAD,EAAI,sBAAJ,EAA4BA,CAAC,CAACe,MAAF,CAASb,KAArC;AALlC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAUE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,aAArB;AAAA,wBACGG,QAAQ,CAAC,sBAAD,CAAR,GAAmCX,SAAS,CAAC3B,MAAV,CAAiBD,oBAAjB,CAAsC,CAAtC,CAAnC,GAA8E;AADjF;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApDF,EAqEG6B,QAAQ,CAACzB,IAAT,gBACC,QAAC,KAAD;AAAO,YAAA,OAAO,EAAEyB,QAAQ,CAACvB,IAAzB;AAA+B,YAAA,OAAO,EAAE,MAAMgC,cAAc,EAA5D;AAAgE,YAAA,WAAW,MAA3E;AAAA,oCACE,QAAC,KAAD,CAAO,OAAP;AAAA,wBAAiBT,QAAQ,CAACvB,IAAT,KAAkB,SAAnB,GAAiC,UAAjC,GAAgD;AAAhE;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAIuB,QAAQ,CAACxB;AAAb;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,gBAOC,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAG6B,CAAD,IAAOO,YAAY,CAACP,CAAD,CAAlD;AAAuD,YAAA,OAAO,EAAC,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5EJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AANL;AAAA;AAAA;AAAA;AAAA,UADF;AAiGD,CAvMD;;GAAMhB,c;;KAAAA,c;AAyMN,eAAeA,cAAf","sourcesContent":["\nimport React, {useState, useEffect} from 'react';\nimport { Redirect} from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button,  Spinner, Alert} from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from '../../firebaseConnection';\n\n\n//Variáveis do formulário\nconst initialFormState = {\n  isValid: false,\n  loading: false,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: ''\n  },\n  errors: {\n    name: [],\n    email: [],\n    password: [],\n    passwordConfirmation: []\n  },\n  touched: {\n    name: false,\n    email: false,\n    password: false,\n    passwordConfirmation: false\n  }\n};\n\n//Estado inicial do feedback do usuário\nconst initialFeedback = {\n  open: false,\n  message: '',\n  type: '' \n};\n\n//Esquema para validações no validate.js\nconst schema = {\n  name: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    length: { maximum: 150, message: () => 'Este campo deve ter no máximo 150 caracteres' }\n  },\n  email: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    email: { message: () => 'Insira um email válido' }\n  },\n  password: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    length: { minimum: 8, message: () => 'Este campo deve ter no mínimo 8 caracteres' }\n  },\n  passwordConfirmation: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    length: { minimum: 8, message: () => 'Este campo deve ter no mínimo 8 caracteres' },\n    equality: { attribute: 'password', message: 'As senhas não são iguais!', comparator: (v1, v2) => (v1 === v2) }\n  } \n};\n\n\n\nconst CreateUserForm = () => {\n  //Garantindo que a página apenas seja por alguém deslogado do sistema\n  firebase.auth().signOut();\n\n  //Observador\n  firebase.auth().onAuthStateChanged((user) => {\n    if(user){\n      firebase.database().ref('User').child(user.uid).set({\n        name: formState.values.name,\n      })\n    }\n  });\n\n  const [feedback, setFeedback] = useState(initialFeedback);\n  const [formState, setFormState] = useState(initialFormState);\n\n  useEffect(() => {\n    //Verificando campos do formulário a cada atualização do formulário\n    const errors = validate(formState.values, schema, { fullMessages: false });\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false: true,\n      errors: errors ? errors : {}\n    })) \n    \n  }, [formState.values]);\n  \n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [field]: value\n      },\n      touched: {\n        ...formState.touched,\n        [field]: true\n      }\n    });    \n  };\n\n  const handleRedirect = () => {\n    if(formState.isValid){\n      return <Redirect to=\"/\"/>\n    }\n    setFeedback({...feedback, open: false});\n  }\n\n  const hasError = (field) => Boolean(formState.errors[field] && formState.touched[field]);\n\n  const handleSubmit = (e) => {\n    if(formState.isValid){\n      //Submetendo dados ao banco\n      firebase.auth().createUserWithEmailAndPassword(formState.values.email, formState.values.password)\n      .catch((error) =>{\n        if(error.code === 'auth/email-already-in-use'){\n          setFeedback({\n            open: true,\n            type: 'danger',\n            message: \"Email em uso!\"\n          })\n        }else if(error.code === 'auth/invalid-email'){\n          setFeedback({\n            open: true,\n            type: 'danger',\n            message: \"Email inválido!\"\n          })          \n        }else{\n          setFeedback({\n            open: true,\n            type: 'danger',\n            message: 'Erro: ' + error.code\n          })\n        }\n        e.preventDefault();\n      })\n      \n      /*let users = firebase.database().ref('Users');\n      let key = users.push().key;\n      users.child(key).set({\n        name: formState.values.name,\n        email: formState.values.email,\n        senha: formState.values.password\n      });*/\n      \n      setFeedback({\n        open: true,\n        type: 'success',\n        message: \"Cadastrado com sucesso!\"\n      })\n    }else{\n      setFeedback({\n        open: true,\n        type: 'danger',\n        message: \"Não foi possível concluir o cadastro.\"\n      })\n    }    \n    e.preventDefault();\n  };\n\n  return (    \n    <Container style={{padding:10}}>\n      {\n        formState.loading ? \n        (<Row style={{marginTop:250}} className=\"justify-content-center\" float=\"center\">\n              <Spinner  animation=\"border\" variant=\"warning\" size=\"xs\" role=\"status\"/>\n          </Row>) : \n        (<Card>\n          <Card.Header  className=\"bg-dark text-white\" border=\"warning\" as=\"h4\">Criar usuário</Card.Header>\n          \n          <Card.Body>\n            <Card.Title as=\"h4\">Criar conta no sistema</Card.Title>\n            <br/>\n            <Form noValidate>\n\n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Nome</Form.Label>\n                <Form.Control \n                  isInvalid={hasError('name') ? true : false}\n                  type=\"text\" \n                  placeholder=\"Nome Sobrenome\"             \n                  value={formState.values.name}\n                  onChange={e => handleFieldChange(e, 'name', e.target.value)}\n              />\n                {/* Mensagem de erro, caso exista */}\n                <Form.Text className=\"text-danger\">\n                  {hasError('name') ? formState.errors.name[0] : null}\n                </Form.Text>\n                \n              </Form.Group>\n  \n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control \n                  isInvalid={hasError('email') ? true : false}\n                  type=\"email\" \n                  placeholder=\"texto@exemplo.com\" \n                  value={formState.values.email}\n                  onChange={e => handleFieldChange(e, 'email', e.target.value)}\n                />\n                {/* Mensagem de erro, caso exista */}\n                <Form.Text className=\"text-danger\">\n                  {hasError('email') ? formState.errors.email[0] : null}\n                </Form.Text>\n                \n              </Form.Group>\n\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Senha</Form.Label>\n                <Form.Control \n                  isInvalid={hasError('password') ? true : false}\n                  type=\"password\" \n                  placeholder=\"Senha\" \n                  value={formState.values.password}\n                  onChange={e => handleFieldChange(e, 'password', e.target.value)}\n                />\n                {/* Mensagem de erro, caso exista */}\n                <Form.Text className=\"text-danger\">\n                  {hasError('password') ? formState.errors.password[0] : null}\n                </Form.Text>\n                \n              </Form.Group>\n  \n  \n              <Form.Group controlId=\"formBasicPasswordConfirmation\">\n                <Form.Label>Confirme a Senha</Form.Label>\n                <Form.Control \n                  isInvalid={hasError('passwordConfirmation') ? true : false}\n                  type=\"password\" \n                  placeholder=\"Confirme sua senha\" \n                  value={formState.values.passwordConfirmation}\n                  onChange={e => handleFieldChange(e, 'passwordConfirmation', e.target.value)}\n                />\n                {/* Mensagem de erro, caso exista */}       \n                <Form.Text className=\"text-danger\">\n                  {hasError('passwordConfirmation') ? formState.errors.passwordConfirmation[0] : null}\n                </Form.Text>\n\n              </Form.Group>\n\n              {/* Botao Submit e feedback para o usuário utilizando o controleador \"feedback.open\"*/}\n              {feedback.open ? (\n                <Alert variant={feedback.type} onClose={() => handleRedirect()} dismissible>\n                  <Alert.Heading>{(feedback.type === 'success') ? ('Sucesso!') : ('Erro!')}</Alert.Heading>\n                  <p>{feedback.message}</p>\n\n                </Alert>\n              ) :\n                <Button type=\"submit\" onClick={(e) => handleSubmit(e)} variant=\"primary\">Cadastrar</Button>\n              }\n            </Form>\n          </Card.Body>\n        </Card>)\n      }      \n    </Container>\n  );\n}\n\nexport default CreateUserForm;\n"]},"metadata":{},"sourceType":"module"}