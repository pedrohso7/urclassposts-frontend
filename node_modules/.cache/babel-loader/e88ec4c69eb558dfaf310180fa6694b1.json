{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts-frontend/src/views/Login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button, Spinner, Alert } from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from '../../firebaseConnection'; //Variáveis do formulário\n\nconst initialFormState = {\n  isValid: false,\n  loading: false,\n  values: {\n    email: '',\n    password: ''\n  },\n  errors: {\n    email: [],\n    password: []\n  },\n  touched: {\n    email: false,\n    password: false\n  }\n}; //Estado inicial do feedback do usuário\n\nconst initialFeedback = {\n  open: false,\n  message: '',\n  type: ''\n}; //Esquema para validações no validate.js\n\nconst schema = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    email: {\n      message: () => 'Insira um email válido'\n    }\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    }\n  }\n};\n\nconst Login = () => {\n  _s();\n\n  //Garantindo que a página apenas seja por alguém deslogado do sistema\n  firebase.auth().signOut();\n  const [feedback, setFeedback] = useState(initialFeedback);\n  const [formState, setFormState] = useState(initialFormState);\n  const [redirect, setRedirect] = useState(false); //Observador\n\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) setRedirect(true);else setRedirect(false);\n  });\n  useEffect(() => {\n    //Verificando campos do formulário a cada atualização do formulário\n    const errors = validate(formState.values, schema, {\n      fullMessages: false\n    });\n    setFormState(formState => ({ ...formState,\n      isValid: errors ? false : true,\n      errors: errors ? errors : {}\n    }));\n  }, [formState.values]);\n\n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({ ...formState,\n      values: { ...formState.values,\n        [field]: value\n      },\n      touched: { ...formState.touched,\n        [field]: true\n      }\n    });\n  };\n\n  const hasError = field => Boolean(formState.errors[field] && formState.touched[field]);\n\n  const handleSubmit = e => {\n    if (formState.isValid) {\n      firebase.auth().signInWithEmailAndPassword(formState.values.email, formState.values.password).catch(error => {\n        if (error.code === 'auth/wrong-password') {\n          setFeedback({\n            open: true,\n            type: 'warning',\n            message: \"Senha incorreta!\"\n          });\n        } else if (error.code === 'auth/invalid-email') {\n          setFeedback({\n            open: true,\n            type: 'warning',\n            message: \"Email inválido!\"\n          });\n        } else if (error.code === 'auth/user-not-found') {\n          setFeedback({\n            open: true,\n            type: 'warning',\n            message: \"Usuário não encontrado!\"\n          });\n        } else {\n          setFeedback({\n            open: true,\n            type: 'warning',\n            message: 'Erro: ' + error.code\n          });\n        }\n      });\n      setFeedback({\n        open: true,\n        type: 'success',\n        message: \"Logado com sucesso!\"\n      });\n    } else {\n      setFeedback({\n        open: true,\n        type: 'warning',\n        message: \"Não foi possível entrar no sistema.\"\n      });\n    }\n\n    e.preventDefault();\n  };\n\n  console.log(); //if (redirect) return <Redirect to=\"/\" />\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      padding: 10\n    },\n    children: formState.loading ? /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginTop: 250\n      },\n      className: \"justify-content-center\",\n      float: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"warning\",\n        size: \"xs\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      bg: \"dark\",\n      text: \"white\",\n      body: true,\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"text-warning\",\n        border: \"warning\",\n        as: \"h4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              isInvalid: hasError('email') ? true : false,\n              type: \"email\",\n              placeholder: \"texto@exemplo.com\",\n              value: formState.values.email,\n              onChange: e => handleFieldChange(e, 'email', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-warning\",\n              children: hasError('email') ? formState.errors.email[0] : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              isInvalid: hasError('password') ? true : false,\n              type: \"password\",\n              placeholder: \"Senha\",\n              value: formState.values.password,\n              onChange: e => handleFieldChange(e, 'password', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-warning\",\n              children: hasError('password') ? formState.errors.password[0] : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), feedback.open ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: feedback.type,\n            onClose: () => setFeedback({ ...feedback,\n              open: false\n            }),\n            dismissible: true,\n            children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n              children: feedback.type === 'success' ? 'Sucesso!' : 'Erro!'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: feedback.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), feedback.type === 'warning' ? /*#__PURE__*/_jsxDEV(Link, {\n              to: '/user/create',\n              children: \"Deseja criar uma conta?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 52\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"warning\",\n            onClick: e => handleSubmit(e),\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"xJe9eJHYen5q3cGOoEhmp4KoquI=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts-frontend/src/views/Login/index.js"],"names":["React","useState","useEffect","Link","Redirect","Container","Row","Card","Form","Button","Spinner","Alert","validate","firebase","initialFormState","isValid","loading","values","email","password","errors","touched","initialFeedback","open","message","type","schema","presence","allowEmpty","Login","auth","signOut","feedback","setFeedback","formState","setFormState","redirect","setRedirect","onAuthStateChanged","user","fullMessages","handleFieldChange","e","field","value","persist","hasError","Boolean","handleSubmit","signInWithEmailAndPassword","catch","error","code","preventDefault","console","log","padding","marginTop","target"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Link , Redirect} from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button,  Spinner, Alert} from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from '../../firebaseConnection';\n\n\n//Variáveis do formulário\nconst initialFormState = {\n  isValid: false,\n  loading: false,\n  values: {\n    email: '',\n    password: ''\n  },\n  errors: {\n    email: [],\n    password: [],\n  },\n  touched: {\n    email: false,\n    password: false,\n  }\n};\n\n//Estado inicial do feedback do usuário\nconst initialFeedback = {\n  open: false,\n  message: '',\n  type: '' \n};\n\n//Esquema para validações no validate.js\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    email: { message: () => 'Insira um email válido' }\n  },\n  password: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n  }\n};\n\n\nconst Login = () => {\n  //Garantindo que a página apenas seja por alguém deslogado do sistema\n  firebase.auth().signOut();\n\n\n  const [feedback, setFeedback] = useState(initialFeedback);\n  const [formState, setFormState] = useState(initialFormState);\n  const [redirect, setRedirect] = useState(false);\n\n\n  //Observador\n  firebase.auth().onAuthStateChanged((user) => {\n    if(user) \n      setRedirect(true)\n    else \n      setRedirect(false)\n  }); \n\n  useEffect(() => {\n    //Verificando campos do formulário a cada atualização do formulário\n    const errors = validate(formState.values, schema, { fullMessages: false });\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false: true,\n      errors: errors ? errors : {}\n    })) \n    \n  }, [formState.values]);\n  \n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [field]: value\n      },\n      touched: {\n        ...formState.touched,\n        [field]: true\n      }\n    });    \n  };  \n\n  const hasError = (field) => Boolean(formState.errors[field] && formState.touched[field]);\n\n  const handleSubmit = (e) => {\n    if(formState.isValid){\n      firebase.auth().signInWithEmailAndPassword(formState.values.email, formState.values.password)\n      .catch((error) =>{\n        if(error.code === 'auth/wrong-password'){\n          setFeedback({\n            open: true,\n            type: 'warning',\n            message: \"Senha incorreta!\"\n          })\n        }else if(error.code === 'auth/invalid-email'){\n          setFeedback({\n            open: true,\n            type: 'warning',\n            message: \"Email inválido!\"\n          })\n        }else if(error.code === 'auth/user-not-found'){\n          setFeedback({\n            open: true,\n            type: 'warning',\n            message: \"Usuário não encontrado!\"\n          })\n        }else{\n          setFeedback({\n            open: true,\n            type: 'warning',\n            message: 'Erro: ' + error.code\n          })\n        }\n      })\n      \n      setFeedback({\n        open: true,\n        type: 'success',\n        message: \"Logado com sucesso!\"\n      })\n    }else{\n      setFeedback({\n        open: true,\n        type: 'warning',\n        message: \"Não foi possível entrar no sistema.\"\n      })\n    }    \n    \n    e.preventDefault();\n  };\n\n  console.log()\n  //if (redirect) return <Redirect to=\"/\" />\n\n\n  return (    \n    <Container style={{padding:10}}>\n      {\n        formState.loading ? \n        (<Row style={{marginTop:250}} className=\"justify-content-center\" float=\"center\">\n              <Spinner  animation=\"border\" variant=\"warning\" size=\"xs\" role=\"status\"/>\n          </Row>) : \n        (<Card bg=\"dark\" text=\"white\" body>\n          <Card.Header className=\"text-warning\"  border=\"warning\" as=\"h4\">Login</Card.Header>\n          \n          <Card.Body>\n            <br/>\n            <Form noValidate>\n  \n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control \n                  isInvalid={hasError('email') ? true : false}\n                  type=\"email\" \n                  placeholder=\"texto@exemplo.com\" \n                  value={formState.values.email}\n                  onChange={e => handleFieldChange(e, 'email', e.target.value)}\n                />\n                {/* Mensagem de erro, caso exista */}\n                <Form.Text className=\"text-warning\">\n                  {hasError('email') ? formState.errors.email[0] : null}\n                </Form.Text>\n              </Form.Group>\n\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Senha</Form.Label>\n                <Form.Control \n                  isInvalid={hasError('password') ? true : false}\n                  type=\"password\" \n                  placeholder=\"Senha\" \n                  value={formState.values.password}\n                  onChange={e => handleFieldChange(e, 'password', e.target.value)}\n                />\n                <Form.Text className=\"text-warning\">\n                  {hasError('password') ? formState.errors.password[0] : null}\n                </Form.Text>                \n              </Form.Group>\n\n              {/* Botao Submit e feedback para o usuário utilizando o controleador \"feedback.open\"*/}\n              {feedback.open ? (\n                <Alert variant={feedback.type} onClose={() => setFeedback({...feedback, open: false})              } dismissible>\n                  <Alert.Heading>{(feedback.type === 'success') ? ('Sucesso!') : ('Erro!')}</Alert.Heading>\n                  <p>{feedback.message}</p>\n                  {(feedback.type === 'warning') ? <Link to={'/user/create'}>Deseja criar uma conta?</Link> : null}\n                </Alert>\n              ) :\n              <Button type=\"submit\" variant = \"warning\" onClick={(e) => handleSubmit(e)}>Entrar</Button>\n              }\n            </Form> \n          </Card.Body>\n        </Card>)\n      }      \n    </Container>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}